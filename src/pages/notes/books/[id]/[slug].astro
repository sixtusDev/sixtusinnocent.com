---
import { type CollectionEntry, getCollection } from "astro:content";
import Posts from "@layouts/Posts.astro";
import PostDetails from "@layouts/PostDetails.astro";
import getSortedPosts from "@utils/getSortedPosts";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";

export interface Props {
  post: CollectionEntry<"bookNotes">;
}

export async function getStaticPaths() {
  const posts =
    (await getCollection("bookNotes", ({ data }) => !data.draft)) || [];

  const postResult = posts.map(post => ({
    params: { slug: post.slug, id: post.data.bookId },
    props: { post },
  }));

  const pagePaths = getPageNumbers(posts.length).map(pageNum => ({
    params: { slug: String(pageNum), id: String(pageNum) },
  }));

  return [...postResult, ...pagePaths];
}

const { slug, id } = Astro.params;
const { post } = Astro.props;

const posts = (await getCollection("bookNotes")).filter(post =>
  post.id.startsWith(id)
);

const sortedPosts = getSortedPosts(posts);

const pagination = getPagination({
  posts: sortedPosts,
  page: slug,
});
---

{post ? <PostDetails post={post} /> : <Posts {...pagination} />}
